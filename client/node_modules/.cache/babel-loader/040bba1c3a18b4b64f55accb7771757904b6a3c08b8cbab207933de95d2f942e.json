{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\portfolio\\\\MERN\\\\project\\\\client\\\\src\\\\components\\\\MainGrid\\\\MainGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport \"./MainGrid.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainGrid = () => {\n  _s();\n  const [brands, setBrands] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchBrands = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/brands\");\n        setBrands(response.data);\n      } catch (err) {\n        setError(\"Failed to load brands\");\n      }\n    };\n    fetchBrands();\n  }, []);\n  const getRandomBrands = (brandsArray, num) => {\n    const shuffled = brandsArray.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  const randomBrands = getRandomBrands(brands, 4); // Get 4 random brands\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4 image-grid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: randomBrands.map(brand => /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"custom-col\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/brands/${brand._id}`,\n          className: \"image-link\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: brand.images[0] // Using the first image as the display image\n            ,\n            alt: brand.name,\n            fluid: true,\n            className: \"custom-image mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, brand._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MainGrid, \"aGDNUql9I8d481eCK2PyJ8E/uus=\");\n_c = MainGrid;\nexport default MainGrid;\nvar _c;\n$RefreshReg$(_c, \"MainGrid\");","map":{"version":3,"names":["React","useEffect","useState","Link","Container","Row","Col","Image","axios","jsxDEV","_jsxDEV","MainGrid","_s","brands","setBrands","error","setError","fetchBrands","response","get","data","err","getRandomBrands","brandsArray","num","shuffled","sort","Math","random","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","randomBrands","className","map","brand","md","to","_id","src","images","alt","name","fluid","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/portfolio/MERN/project/client/src/components/MainGrid/MainGrid.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport \"./MainGrid.css\";\r\nimport axios from \"axios\";\r\n\r\nconst MainGrid = () => {\r\n  const [brands, setBrands] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchBrands = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/brands\");\r\n        setBrands(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to load brands\");\r\n      }\r\n    };\r\n\r\n    fetchBrands();\r\n  }, []);\r\n\r\n  const getRandomBrands = (brandsArray, num) => {\r\n    const shuffled = brandsArray.sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, num);\r\n  };\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  const randomBrands = getRandomBrands(brands, 4); // Get 4 random brands\r\n\r\n  return (\r\n    <Container className=\"mt-4 image-grid\">\r\n      <Row>\r\n        {randomBrands.map((brand) => (\r\n          <Col md={6} key={brand._id} className=\"custom-col\">\r\n            <Link to={`/brands/${brand._id}`} className=\"image-link\">\r\n              <Image\r\n                src={brand.images[0]} // Using the first image as the display image\r\n                alt={brand.name}\r\n                fluid\r\n                className=\"custom-image mb-3\"\r\n              />\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAC5D,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,kCAAkC,CAAC;QACpEL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,uBAAuB,CAAC;MACnC;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGA,CAACC,WAAW,EAAEC,GAAG,KAAK;IAC5C,MAAMC,QAAQ,GAAGF,WAAW,CAACG,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IAC5D,OAAOH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEL,GAAG,CAAC;EAC/B,CAAC;EAED,IAAIT,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAoB,QAAA,EAAMf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,MAAMC,YAAY,GAAGb,eAAe,CAACT,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEjD,oBACEH,OAAA,CAACN,SAAS;IAACgC,SAAS,EAAC,iBAAiB;IAAAN,QAAA,eACpCpB,OAAA,CAACL,GAAG;MAAAyB,QAAA,EACDK,YAAY,CAACE,GAAG,CAAEC,KAAK,iBACtB5B,OAAA,CAACJ,GAAG;QAACiC,EAAE,EAAE,CAAE;QAAiBH,SAAS,EAAC,YAAY;QAAAN,QAAA,eAChDpB,OAAA,CAACP,IAAI;UAACqC,EAAE,EAAE,WAAWF,KAAK,CAACG,GAAG,EAAG;UAACL,SAAS,EAAC,YAAY;UAAAN,QAAA,eACtDpB,OAAA,CAACH,KAAK;YACJmC,GAAG,EAAEJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAE,CAAC;YAAA;YACtBC,GAAG,EAAEN,KAAK,CAACO,IAAK;YAChBC,KAAK;YACLV,SAAS,EAAC;UAAmB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC,GARQI,KAAK,CAACG,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASrB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACtB,EAAA,CA9CID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}