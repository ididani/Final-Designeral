{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\portfolio\\\\MERN\\\\project\\\\client\\\\src\\\\components\\\\Brand\\\\Brand.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './Brand.css'; // Optional: You can create a CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Brand = () => {\n  _s();\n  const {\n    brandId\n  } = useParams(); // Get the brand ID from the URL\n  const [brand, setBrand] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchBrand = async () => {\n      console.log(\"Brand ID:\", brandId); // Log the ID for validation\n      setLoading(true); // Set loading to true before the fetch\n      try {\n        const response = await axios.get(`http://localhost:5000/api/brands/${brandId}`);\n        setBrand(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error(err.response); // Log the entire response for debugging\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to load brand information\");\n      } finally {\n        setLoading(false); // Stop loading after fetch attempt\n      }\n    };\n    fetchBrand();\n  }, [brandId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // Show loading indicator\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this); // Display error message\n  }\n  if (!brand) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No brand information available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this); // Handle case with no brand data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brand-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: brand.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: brand.images[0],\n      alt: brand.name,\n      className: \"brand-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: brand.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-images\",\n      children: brand.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `${brand.name} image ${index + 1}`,\n        className: \"brand-image\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Brand, \"/FGPk95jIdprOARTXCiGkjV32fc=\", false, function () {\n  return [useParams];\n});\n_c = Brand;\nexport default Brand;\nvar _c;\n$RefreshReg$(_c, \"Brand\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Brand","_s","brandId","brand","setBrand","loading","setLoading","error","setError","fetchBrand","console","log","response","get","data","err","_err$response","_err$response$data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","src","images","alt","description","map","image","index","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/portfolio/MERN/project/client/src/components/Brand/Brand.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './Brand.css'; // Optional: You can create a CSS file for styles\r\n\r\nconst Brand = () => {\r\n  const { brandId } = useParams(); // Get the brand ID from the URL\r\n  const [brand, setBrand] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchBrand = async () => {\r\n      console.log(\"Brand ID:\", brandId); // Log the ID for validation\r\n      setLoading(true); // Set loading to true before the fetch\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/api/brands/${brandId}`\r\n        );\r\n        setBrand(response.data);\r\n      } catch (err) {\r\n        console.error(err.response); // Log the entire response for debugging\r\n        setError(\r\n          err.response?.data?.message || \"Failed to load brand information\"\r\n        );\r\n      } finally {\r\n        setLoading(false); // Stop loading after fetch attempt\r\n      }\r\n    };\r\n\r\n    fetchBrand();\r\n  }, [brandId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show loading indicator\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>; // Display error message\r\n  }\r\n\r\n  if (!brand) {\r\n    return <div>No brand information available.</div>; // Handle case with no brand data\r\n  }\r\n\r\n  return (\r\n    <div className=\"brand-container\">\r\n      <h1>{brand.name}</h1>\r\n      <img src={brand.images[0]} alt={brand.name} className=\"brand-logo\" />\r\n      <p>{brand.description}</p>\r\n      <div className=\"brand-images\">\r\n        {brand.images.map((image, index) => (\r\n          <img\r\n            key={index}\r\n            src={image}\r\n            alt={`${brand.name} image ${index + 1}`}\r\n            className=\"brand-image\"\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}